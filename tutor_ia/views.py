from django.shortcuts import render
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
from django.views import View
import json

class TutorIAView(View):
    def get(self, request):
        return render(request, 'tutor_ia/chat.html')
    
    @csrf_exempt
    def dispatch(self, *args, **kwargs):
        return super().dispatch(*args, **kwargs)
    
    def post(self, request):
        try:
            data = json.loads(request.body)
            mensaje = data.get('mensaje', '').strip().lower()
            
            if not mensaje:
                return JsonResponse({'success': False, 'error': 'Mensaje vac√≠o'})
            
            # Respuestas predeterminadas basadas en palabras clave
            respuesta = self.obtener_respuesta(mensaje)
            
            return JsonResponse({
                'success': True, 
                'respuesta': respuesta
            })
            
        except Exception as e:
            return JsonResponse({'success': False, 'error': str(e)})
    
    def obtener_respuesta(self, mensaje):
        # Diccionario de preguntas frecuentes y respuestas
        faqs = {
            # Diagn√≥stico
            'diagn√≥stico': "üîç **Sistema de Diagn√≥stico**\n\nEl diagn√≥stico eval√∫a tus conocimientos en Python, Django, HTML, CSS y JavaScript. Consiste en preguntas de m√∫ltiple opci√≥n que te ayudar√°n a identificar tu nivel actual.",
            'diagnostico': "üîç **Sistema de Diagn√≥stico**\n\nEl diagn√≥stico eval√∫a tus conocimientos en Python, Django, HTML, CSS y JavaScript. Consiste en preguntas de m√∫ltiple opci√≥n que te ayudar√°n a identificar tu nivel actual.",
            'evaluaci√≥n': "üîç **Sistema de Diagn√≥stico**\n\nEl diagn√≥stico eval√∫a tus conocimientos en Python, Django, HTML, CSS y JavaScript. Consiste en preguntas de m√∫ltiple opci√≥n que te ayudar√°n a identificar tu nivel actual.",
            'test': "üîç **Sistema de Diagn√≥stico**\n\nEl diagn√≥stico eval√∫a tus conocimientos en Python, Django, HTML, CSS y JavaScript. Consiste en preguntas de m√∫ltiple opci√≥n que te ayudar√°n a identificar tu nivel actual.",
            
            # Python
            'python': "üêç **Python**\n\nPython es un lenguaje de programaci√≥n f√°cil de aprender, ideal para principiantes. Se usa para desarrollo web, an√°lisis de datos, inteligencia artificial y m√°s.",
            'qu√© es python': "üêç **Python**\n\nPython es un lenguaje de programaci√≥n interpretado de alto nivel. Su sintaxis clara lo hace perfecto para empezar en programaci√≥n.",
            'que es python': "üêç **Python**\n\nPython es un lenguaje de programaci√≥n interpretado de alto nivel. Su sintaxis clara lo hace perfecto para empezar en programaci√≥n.",
            
            # Django
            'django': "üé∏ **Django**\n\nDjango es un framework web de Python que facilita la creaci√≥n de aplicaciones web robustas y seguras. Incluye ORM, panel de administraci√≥n y autenticaci√≥n.",
            'qu√© es django': "üé∏ **Django**\n\nDjango es un framework web que sigue el patr√≥n MVT (Modelo-Vista-Template). Es ideal para desarrollar aplicaciones web complejas r√°pidamente.",
            'que es django': "üé∏ **Django**\n\nDjango es un framework web que sigue el patr√≥n MVT (Modelo-Vista-Template). Es ideal para desarrollar aplicaciones web complejas r√°pidamente.",
            
            # Frontend
            'html': "üåê **HTML**\n\nHTML es el lenguaje est√°ndar para crear p√°ginas web. Define la estructura y el contenido usando etiquetas como <h1>, <p>, <div>.",
            'css': "üé® **CSS**\n\nCSS se usa para dar estilo a las p√°ginas web. Controla colores, fuentes, dise√±os y la apariencia general del sitio.",
            'javascript': "‚ö° **JavaScript**\n\nJavaScript hace que las p√°ginas web sean interactivas. Se ejecuta en el navegador y permite crear efectos, validar formularios y m√°s.",
            
            # Plataforma
            'plataforma': "üñ•Ô∏è **Plataforma**\n\nNuestra plataforma ofrece diagn√≥stico inicial, contenido personalizado y seguimiento de progreso. Comienza con el diagn√≥stico para obtener recomendaciones.",
            'c√≥mo usar': "üñ•Ô∏è **Uso de la Plataforma**\n\n1. Realiza el diagn√≥stico inicial\n2. Revisa tus resultados\n3. Accede al contenido recomendado\n4. Practica con ejercicios",
            'como usar': "üñ•Ô∏è **Uso de la Plataforma**\n\n1. Realiza el diagn√≥stico inicial\n2. Revisa tus resultados\n3. Accede al contenido recomendado\n4. Practica con ejercicios",
            
            # Ayuda general
            'ayuda': "ü§ñ **Asistente Virtual**\n\nPuedo ayudarte con:\n‚Ä¢ Informaci√≥n sobre el diagn√≥stico\n‚Ä¢ Explicaciones de Python, Django\n‚Ä¢ Conceptos de HTML, CSS, JavaScript\n‚Ä¢ Uso de la plataforma\n\nUsa los botones de preguntas r√°pidas o escribe tu duda.",
            'help': "ü§ñ **Asistente Virtual**\n\nPuedo ayudarte con:\n‚Ä¢ Informaci√≥n sobre el diagn√≥stico\n‚Ä¢ Explicaciones de Python, Django\n‚Ä¢ Conceptos de HTML, CSS, JavaScript\n‚Ä¢ Uso de la plataforma\n\nUsa los botones de preguntas r√°pidas o escribe tu duda.",
        }
        
        # Buscar coincidencias exactas primero
        if mensaje in faqs:
            return faqs[mensaje]
        
        # Buscar palabras clave en el mensaje
        for palabra_clave, respuesta in faqs.items():
            if palabra_clave in mensaje:
                return respuesta
        
        # Respuesta por defecto si no encuentra coincidencia
        return "‚ùì **Pregunta no reconocida**\n\nNo encuentro una respuesta para tu pregunta. Puedo ayudarte con:\n\n‚Ä¢ **Diagn√≥stico del sistema**\n‚Ä¢ **Python y Django**\n‚Ä¢ **HTML, CSS, JavaScript**\n‚Ä¢ **Uso de la plataforma**\n\nUsa los botones de preguntas r√°pidas o intenta con t√©rminos m√°s espec√≠ficos."